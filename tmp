Type inference of : let l = (ref []) in let _ = ( l:=( λx.(x)::!l ) ) in l

[T0 = ∀_T3.Ref ( [_T3] )]
[Ref ( [_T3] ) = T0]

Type inference of : let l = (ref []) in let _ = ( l:=( λx.(x)::!l ) ) in l resulted in : Ref ( [_T3] )
 trace : 
genEquas(lte= l,lty= T0, n= 1,context= fromList [("_",⬤),("l",∀_T3.Ref ( [_T3] ))])
 -----> [ T0 = ∀_T3.Ref ( [_T3] ) ]

 {{{{{{ fromList []  }}}}}}    {{{{{{ fromList []  }}}}}}   genEquas(lte= let l = (ref []) in let _ = ( l:=( λx.(x)::!l ) ) in l,lty= T0, n= 1,context= fromList [])
 -----> [  ]

genEquas(lte= (ref []),lty= T0, n= 1,context= fromList [])
 -----> [  ]

genEquas(lte= ref,lty= ( T1 -> T0 ), n= 2,context= fromList [])
 -----> [ ( T1 -> T0 ) = ∀T2.( T2 -> Ref ( T2 ) ) ]

genEquas(lte= [],lty= T1, n= 3,context= fromList [])
 -----> [ T1 = [T3] ]

genEquas(lte= (ref []),lty= T0, n= 1,context= fromList [])
 -----> [ [( T1 -> T0 ) = ∀T2.( T2 -> Ref ( T2 ) ),T1 = [T3]] ]

genEquas(lte= ( l:=( λx.(x)::!l ) ),lty= T0, n= 1,context= fromList [("l",∀_T3.Ref ( [_T3] ))])
 -----> [  ]

genEquas(lte= :=,lty= ( T2 -> ( T1 -> T0 ) ), n= 3,context= fromList [("l",∀_T3.Ref ( [_T3] ))])
 -----> [ ( T2 -> ( T1 -> T0 ) ) = ∀T3.( Ref ( T3 ) -> ( T3 -> ⬤ ) ) ]

genEquas(lte= l,lty= T2, n= 4,context= fromList [("l",∀_T3.Ref ( [_T3] ))])
 -----> [ T2 = ∀_T3.Ref ( [_T3] ) ]

genEquas(lte= (:= l),lty= ( T1 -> T0 ), n= 2,context= fromList [("l",∀_T3.Ref ( [_T3] ))])
 -----> [ [( T2 -> ( T1 -> T0 ) ) = ∀T3.( Ref ( T3 ) -> ( T3 -> ⬤ ) ),T2 = ∀_T3.Ref ( [_T3] )] ]

genEquas(lte= ::,lty= ( T5 -> ( T4 -> T1 ) ), n= 6,context= fromList [("l",∀_T3.Ref ( [_T3] ))])
 -----> [ ∀T6.( T6 -> ( [T6] -> [T6] ) ) = ( T5 -> ( T4 -> T1 ) ) ]

genEquas(lte= x,lty= T8, n= 9,context= fromList [("l",∀_T3.Ref ( [_T3] )),("x",T7)])
 -----> [ T8 = T7 ]

genEquas(lte= λx.(x),lty= T5, n= 7,context= fromList [("l",∀_T3.Ref ( [_T3] ))])
 -----> [ T5 = ( T7 -> T8 ) ]

genEquas(lte= (cons) λx.(x),lty= ( T4 -> T1 ), n= 5,context= fromList [("l",∀_T3.Ref ( [_T3] ))])
 -----> [ [∀T6.( T6 -> ( [T6] -> [T6] ) ) = ( T5 -> ( T4 -> T1 ) ),T5 = ( T7 -> T8 ),T8 = T7] ]

genEquas(lte= !,lty= ( T9 -> T4 ), n= 10,context= fromList [("l",∀_T3.Ref ( [_T3] ))])
 -----> [ ( T9 -> T4 ) = ∀T10.( Ref ( T10 ) -> T10 ) ]

genEquas(lte= l,lty= T9, n= 11,context= fromList [("l",∀_T3.Ref ( [_T3] ))])
 -----> [ T9 = ∀_T3.Ref ( [_T3] ) ]

genEquas(lte= !l,lty= T4, n= 9,context= fromList [("l",∀_T3.Ref ( [_T3] ))])
 -----> [ [( T9 -> T4 ) = ∀T10.( Ref ( T10 ) -> T10 ),T9 = ∀_T3.Ref ( [_T3] )] ]

genEquas(lte= ( λx.(x)::!l ),lty= T1, n= 4,context= fromList [("l",∀_T3.Ref ( [_T3] ))])
 -----> [ [∀T6.( T6 -> ( [T6] -> [T6] ) ) = ( T5 -> ( T4 -> T1 ) ),T5 = ( T7 -> T8 ),T8 = T7,( T9 -> T4 ) = ∀T10.( Ref ( T10 ) -> T10 ),T9 = ∀_T3.Ref ( [_T3] )] ]

genEquas(lte= ( l:=( λx.(x)::!l ) ),lty= T0, n= 1,context= fromList [("l",∀_T3.Ref ( [_T3] ))])
 -----> [ [( T2 -> ( T1 -> T0 ) ) = ∀T3.( Ref ( T3 ) -> ( T3 -> ⬤ ) ),T2 = ∀_T3.Ref ( [_T3] ),∀T6.( T6 -> ( [T6] -> [T6] ) ) = ( T5 -> ( T4 -> T1 ) ),T5 = ( T7 -> T8 ),T8 = T7,( T9 -> T4 ) = ∀T10.( Ref ( T10 ) -> T10 ),T9 = ∀_T3.Ref ( [_T3] )] ]



 weakvs : fromList []
Evaluation) of  : @p:1

0 | let l = (ref []) in let _ = ( l:=( λx.(x)::!l ) ) in l
1 | let l = @p:1 in let _ = ( l:=( λx.(x)::!l ) ) in l
2 | let _ = ( @p:1:=( λx.(x)::!@p:1 ) ) in @p:1
3 | let _ = ( @p:1:=( λx.(x)::[] ) ) in @p:1
4 | let _ = ( @p:1:=[λx.(x)] ) in @p:1
5 | let _ = □ in @p:1
6 | @p:1

The evaluation succeeded! result : @p:1


